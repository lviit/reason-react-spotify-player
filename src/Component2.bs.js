// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Fetch = require("bs-fetch/src/Fetch.js");
var React = require("react");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function user(user$1) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.$$int, user$1),
          /* name */Json_decode.field("name", Json_decode.string, user$1)
        ];
}

function users(json) {
  return Json_decode.list(user, json);
}

var Decode = /* module */[
  /* user */user,
  /* users */users
];

function Component2(Props) {
  Props.greeting;
  var match = React.useReducer((function (state, action) {
          if (action) {
            return /* record */[
                    /* count */state[/* count */0],
                    /* show */!state[/* show */1]
                  ];
          } else {
            return /* record */[
                    /* count */state[/* count */0] + 1 | 0,
                    /* show */state[/* show */1]
                  ];
          }
        }), /* record */[
        /* count */0,
        /* show */true
      ]);
  var dispatch = match[1];
  React.useEffect((function () {
          var url = new URLSearchParams(window.location.hash);
          var accessToken = url.get("#access_token");
          var authHeader = (accessToken == null) ? "none" : "Bearer " + accessToken;
          fetch("https://api.spotify.com/v1/me/player", Fetch.RequestInit[/* make */0](undefined, {
                            Authorization: authHeader
                          }, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)).then((function (prim) {
                      return prim.json();
                    })).then((function (json) {
                    var users = Json_decode.list(user, json);
                    return Promise.resolve(users);
                  })).catch((function (_err) {
                  return Promise.resolve(undefined);
                }));
          return (function (param) {
                    return /* () */0;
                  });
        }));
  var join = function ($$char, list) {
    if (list) {
      var tail = list[1];
      var tail$1 = list[0];
      if (tail) {
        return tail$1 + ($$char + join($$char, tail));
      } else {
        return tail$1;
      }
    } else {
      throw [
            Caml_builtin_exceptions.failure,
            "Passed an empty list"
          ];
    }
  };
  var message = "You've clicked this " + (String(match[0][/* count */0]) + " times(s)");
  return React.createElement("div", undefined, React.createElement("button", {
                  onClick: (function (_event) {
                      return Curry._1(dispatch, /* Click */0);
                    })
                }, message), React.createElement("button", {
                  onClick: (function (_event) {
                      return Curry._1(dispatch, /* Toggle */1);
                    })
                }, "Toggle greeting"), React.createElement("a", {
                  className: "btn btn--loginApp-link",
                  href: "https://accounts.spotify.com/authorize?client_id=64d03692241b478cb763ec2a7eed99e0&redirect_uri=http://localhost:8000&scope=" + (join("%20", /* :: */[
                          "user-read-currently-playing",
                          /* :: */[
                            "user-read-playback-state",
                            /* [] */0
                          ]
                        ]) + "&response_type=token&show_dialog=true")
                }, "Login to Spotify"));
}

var make = Component2;

exports.Decode = Decode;
exports.make = make;
/* react Not a pure module */
